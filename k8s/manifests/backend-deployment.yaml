apiVersion: apps/v1
kind: Deployment
metadata:
  name: econ-graph-backend
  namespace: econ-graph
  labels:
    app: econ-graph-backend
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: econ-graph-backend
  template:
    metadata:
      labels:
        app: econ-graph-backend
        component: backend
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for PostgreSQL to be ready..."
          until nc -z postgres-service.econ-graph.svc.cluster.local 5432; do
            echo "PostgreSQL is unavailable - sleeping"
            sleep 2
          done
          echo "PostgreSQL is ready!"
        resources:
          requests:
            memory: "16Mi"
            cpu: "10m"
          limits:
            memory: "32Mi"
            cpu: "50m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
      containers:
      - name: backend
        image: econ-graph-backend:v3.7.4
        imagePullPolicy: Never  # Use local image
        ports:
        # Note: containerPort must be static in Kubernetes, but the application
        # reads the actual port from the BACKEND_PORT environment variable
        - containerPort: 9876
          name: http
        env:
        # Port Configuration
        - name: BACKEND_PORT
          valueFrom:
            configMapKeyRef:
              name: econ-graph-config
              key: BACKEND_PORT
        - name: FRONTEND_PORT
          valueFrom:
            configMapKeyRef:
              name: econ-graph-config
              key: FRONTEND_PORT
        # Backend Configuration
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: econ-graph-config
              key: DATABASE_URL
        - name: RUST_LOG
          valueFrom:
            configMapKeyRef:
              name: econ-graph-config
              key: RUST_LOG
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: econ-graph-secrets
              key: jwt-secret
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: econ-graph-config
              key: CORS_ORIGIN
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: econ-graph-secrets
              key: google-client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: econ-graph-secrets
              key: google-client-secret
        - name: FACEBOOK_APP_ID
          valueFrom:
            secretKeyRef:
              name: econ-graph-secrets
              key: facebook-app-id
        - name: FACEBOOK_APP_SECRET
          valueFrom:
            secretKeyRef:
              name: econ-graph-secrets
              key: facebook-app-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        startupProbe:
          httpGet:
            path: /health
            port: 9876
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30  # Allow up to 150 seconds for startup (30 * 5s)
        livenessProbe:
          httpGet:
            path: /health
            port: 9876
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 9876
          initialDelaySeconds: 15  # Increased from 5 to allow for migrations
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
      securityContext:
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: Always
