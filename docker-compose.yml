version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: econ_graph
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/econ_graph
      RUST_LOG: info
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://localhost:8000
    volumes:
      - ./frontend/src:/app/src:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development services
  backend-dev:
    profiles: ["dev"]
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/econ_graph
      RUST_LOG: debug
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - cargo_cache:/usr/local/cargo/registry
      - target_cache:/app/target

  frontend-dev:
    profiles: ["dev"]
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    depends_on:
      - backend-dev
    environment:
      REACT_APP_API_URL: http://localhost:8000
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./frontend:/app
      - node_modules_cache:/app/node_modules

  # Testing services
  test-postgres:
    profiles: ["test"]
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: econ_graph_test
    ports:
      - "5433:5432"
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 10

  backend-test:
    profiles: ["test"]
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    environment:
      DATABASE_URL: postgresql://postgres:password@test-postgres:5432/econ_graph_test
    depends_on:
      test-postgres:
        condition: service_healthy
    command: cargo test --verbose
    volumes:
      - ./backend:/app
      - cargo_cache:/usr/local/cargo/registry

  frontend-test:
    profiles: ["test"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    command: npm test -- --watchAll=false --coverage
    volumes:
      - ./frontend:/app
      - node_modules_cache:/app/node_modules

volumes:
  postgres_data:
  cargo_cache:
  target_cache:
  node_modules_cache:
