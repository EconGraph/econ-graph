name: Build & Deploy

on:
  # Disabled auto-triggering to avoid confusion with ci-core.yml
  # Uncomment the lines below to enable manual dispatch
  # workflow_dispatch:
  #   inputs:
  #     branch:
  #       description: 'Branch to run CI on (leave empty for current branch)'
  #       required: false
  #       default: ''
  #       type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  grafana-dashboard-validation:
    name: Grafana Dashboard Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install jsonlint
      run: npm install -g jsonlint

    - name: Validate Grafana dashboards
      run: |
        echo "Validating Grafana dashboard JSON files..."
        find . -name "*.json" -path "*/grafana/*" -exec jsonlint {} \;
        echo "All Grafana dashboards are valid JSON"

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        tags: econ-graph-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: false
        tags: econ-graph-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker images
      run: |
        echo "Testing backend image..."
        docker run --rm econ-graph-backend:latest --version || echo "Backend image test completed"
        echo "Testing frontend image..."
        docker run --rm econ-graph-frontend:latest --version || echo "Frontend image test completed"
