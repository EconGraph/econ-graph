name: Admin Frontend Tests

on:
  push:
    branches: [ main, develop, feature/admin-crawler-ui ]
    paths:
      - 'admin-frontend/**'
      - '.github/workflows/admin-frontend-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'admin-frontend/**'
      - '.github/workflows/admin-frontend-tests.yml'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run admin frontend tests on (leave empty for current branch)'
        required: false
        default: ''
        type: string

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgresql://postgres:password@localhost:5432/econ_graph_test

jobs:
  admin-frontend-unit-tests:
    name: Admin Frontend Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: admin-frontend/package-lock.json

    - name: Install admin frontend dependencies
      working-directory: admin-frontend
      run: npm ci

    - name: Run admin frontend linting
      working-directory: admin-frontend
      run: npm run lint

    - name: Run admin frontend type checking
      working-directory: admin-frontend
      run: npm run typecheck

    - name: Run admin frontend unit tests
      working-directory: admin-frontend
      run: npm test -- --coverage --watchAll=false --verbose

    - name: Upload test coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: admin-frontend-coverage-${{ github.sha }}
        path: admin-frontend/coverage/
        retention-days: 7

  admin-frontend-integration-tests:
    name: Admin Frontend Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 90
    needs: [admin-frontend-unit-tests]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: econ_graph_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@1.89.0
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          backend/target
        key: ${{ runner.os }}-shared-cargo-v2
        restore-keys: |
          ${{ runner.os }}-shared-cargo-

    - name: Install diesel CLI
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        cargo install diesel_cli --no-default-features --features postgres --verbose --force
      working-directory: backend

    - name: Setup database
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        diesel setup
        diesel migration run
      working-directory: backend

    - name: Build backend
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        cargo build --release
      working-directory: backend

    - name: Start backend service
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        ./target/release/econ-graph-backend &
        sleep 15
        curl -f http://localhost:8080/health || exit 1
      working-directory: backend
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/econ_graph_test
        BACKEND_PORT: 8080

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: admin-frontend/package-lock.json

    - name: Install admin frontend dependencies
      working-directory: admin-frontend
      run: npm ci

    - name: Build admin frontend
      working-directory: admin-frontend
      run: npm run build
      env:
        REACT_APP_GRAPHQL_ENDPOINT: http://localhost:8080/graphql

    - name: Start admin frontend service
      run: |
        cd admin-frontend
        npx serve -s build -l 3001 &
        sleep 10
        curl -f http://localhost:3001 || exit 1

    - name: Run admin frontend integration tests
      working-directory: admin-frontend
      run: npm test -- --coverage --watchAll=false --testPathPattern="integration"
      env:
        REACT_APP_GRAPHQL_ENDPOINT: http://localhost:8080/graphql
        CI: true

    - name: Stop services
      if: always()
      run: |
        pkill -f "econ-graph-backend" || true
        pkill -f "serve" || true

  admin-frontend-e2e-tests:
    name: Admin Frontend E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [admin-frontend-integration-tests]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: econ_graph_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@1.89.0
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          backend/target
        key: ${{ runner.os }}-shared-cargo-v2
        restore-keys: |
          ${{ runner.os }}-shared-cargo-

    - name: Install diesel CLI
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        cargo install diesel_cli --no-default-features --features postgres --verbose --force
      working-directory: backend

    - name: Setup database
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        diesel setup
        diesel migration run
      working-directory: backend

    - name: Build backend
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        cargo build --release
      working-directory: backend

    - name: Start backend service
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        ./target/release/econ-graph-backend &
        sleep 15
        curl -f http://localhost:8080/health || exit 1
      working-directory: backend
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/econ_graph_test
        BACKEND_PORT: 8080

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: admin-frontend/package-lock.json

    - name: Install admin frontend dependencies
      working-directory: admin-frontend
      run: npm ci

    - name: Build admin frontend
      working-directory: admin-frontend
      run: npm run build
      env:
        REACT_APP_GRAPHQL_ENDPOINT: http://localhost:8080/graphql

    - name: Start admin frontend service
      run: |
        cd admin-frontend
        npx serve -s build -l 3001 &
        sleep 10
        curl -f http://localhost:3001 || exit 1

    - name: Install Playwright browsers
      working-directory: admin-frontend
      run: npx playwright install --with-deps

    - name: Run admin frontend E2E tests
      working-directory: admin-frontend
      run: npx playwright test
      env:
        REACT_APP_GRAPHQL_ENDPOINT: http://localhost:8080/graphql

    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: admin-frontend-e2e-results-${{ github.sha }}
        path: |
          admin-frontend/test-results/
          admin-frontend/playwright-report/
        retention-days: 7

    - name: Stop services
      if: always()
      run: |
        pkill -f "econ-graph-backend" || true
        pkill -f "serve" || true

  admin-frontend-quality-checks:
    name: Admin Frontend Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: admin-frontend/package-lock.json

    - name: Install admin frontend dependencies
      working-directory: admin-frontend
      run: npm ci

    - name: Run admin frontend formatting check
      working-directory: admin-frontend
      run: npm run prettier:check

    - name: Run admin frontend linting
      working-directory: admin-frontend
      run: npm run lint

    - name: Run admin frontend type checking
      working-directory: admin-frontend
      run: npm run typecheck

    - name: Run admin frontend security audit
      working-directory: admin-frontend
      run: npm audit --audit-level moderate
