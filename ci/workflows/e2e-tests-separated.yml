name: E2E Tests (Separated Build & Run)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      test_group:
        description: 'Test group to run'
        required: false
        default: 'core'
        type: choice
        options:
          - core
          - analysis
          - debug
          - comprehensive
          - mobile-core
          - mobile-analysis
          - mobile-comprehensive
          - all
      parallel:
        description: 'Run all test groups in parallel'
        required: false
        default: false
        type: boolean

jobs:
  # Step 1: Build Docker images
  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      image-tag: ${{ steps.build.outputs.image-tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker images
      id: build
      run: |
        cd ci
        ./scripts/build-images.sh
        echo "image-tag=$(date +%s)" >> $GITHUB_OUTPUT

    - name: Save Docker images
      run: |
        # Save images to tar files for caching/transfer
        mkdir -p docker-images
        docker save $(docker images --format "table {{.Repository}}:{{.Tag}}" | grep -E "(backend|frontend|test-runner)" | head -3) -o docker-images/images.tar
        gzip docker-images/images.tar

    - name: Upload Docker images
      uses: actions/upload-artifact@v4
      with:
        name: docker-images
        path: ci/docker-images/images.tar.gz
        retention-days: 1

  # Step 2: Run E2E tests
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build-images

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Download Docker images
      uses: actions/download-artifact@v4
      with:
        name: docker-images
        path: ci/docker-images/

    - name: Load Docker images
      run: |
        cd ci/docker-images
        gunzip images.tar.gz
        docker load -i images.tar

    - name: Run E2E Tests
      run: |
        cd ci
        if [ "${{ github.event.inputs.parallel }}" = "true" ]; then
          ./scripts/run-tests-unified.sh --parallel
        elif [ "${{ github.event.inputs.test_group }}" = "all" ]; then
          ./scripts/run-tests-unified.sh --parallel
        else
          ./scripts/run-tests-unified.sh --group ${{ github.event.inputs.test_group || 'core' }}
        fi

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-test-results
        path: ci/test-results/
        retention-days: 7
